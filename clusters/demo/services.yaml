# PersistentVolumeClaim для Loki
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-pvc
  namespace: demo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---

# ConfigMap для Loki
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: demo
data:
  loki-config.yaml: |
    # Ваша конфигурация Loki

---

# Deployment для Loki
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.8.2
          args:
            - "-config.file=/etc/loki/loki-config.yaml"
          volumeMounts:
            - name: loki-storage
              mountPath: /loki
      volumes:
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-pvc

---

# Service для Loki
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: demo
spec:
  selector:
    app: loki
  ports:
    - protocol: TCP
      port: 3100
      targetPort: 3100

---

# ConfigMap для OpenTelemetry Collector
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-configmap
  namespace: demo
data:
  otel-collector-config.yaml: |
    # Ваша конфигурация OpenTelemetry Collector

---

# Deployment для OpenTelemetry Collector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:0.78.0
          args: ["--config=/etc/otel-collector-config.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/otel-collector-config.yaml
              subPath: otel-collector-config.yaml
      volumes:
        - name: config-volume
          configMap:
            name: otel-collector-configmap

---

# Service для OpenTelemetry Collector
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: demo
spec:
  selector:
    app: otel-collector
  ports:
    - protocol: TCP
      port: 4317
      targetPort: 4317

---

# ConfigMap для Prometheus
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: demo
data:
  prometheus.yml: |
    # Ваша конфигурация Prometheus

---

# Deployment для Prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
              subPath: prometheus.yml
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config

---

# Service для Prometheus
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: demo
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090

---

# Deployment для Grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.4.3
        ports:
        - containerPort: 3000

---

# Service для Grafana
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: demo
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
